//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapConsumerCurrencyConverter.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyCode", Namespace="http://schemas.datacontract.org/2004/07/currencyService2")]
    public enum CurrencyCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AUD = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BGN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EUR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEK = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DKK = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USD = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOK = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CZK = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Currency", Namespace="http://schemas.datacontract.org/2004/07/currencyService2")]
    [System.SerializableAttribute()]
    public partial class Currency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ICurrencyService")]
    public interface ICurrencyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetRate", ReplyAction="http://tempuri.org/ICurrencyService/GetRateResponse")]
        double GetRate(SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode codeFrom, SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode codeTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetRate", ReplyAction="http://tempuri.org/ICurrencyService/GetRateResponse")]
        System.Threading.Tasks.Task<double> GetRateAsync(SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode codeFrom, SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode codeTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetAllCurrencyInfos", ReplyAction="http://tempuri.org/ICurrencyService/GetAllCurrencyInfosResponse")]
        SoapConsumerCurrencyConverter.ServiceReference1.Currency[] GetAllCurrencyInfos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyService/GetAllCurrencyInfos", ReplyAction="http://tempuri.org/ICurrencyService/GetAllCurrencyInfosResponse")]
        System.Threading.Tasks.Task<SoapConsumerCurrencyConverter.ServiceReference1.Currency[]> GetAllCurrencyInfosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrencyServiceChannel : SoapConsumerCurrencyConverter.ServiceReference1.ICurrencyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrencyServiceClient : System.ServiceModel.ClientBase<SoapConsumerCurrencyConverter.ServiceReference1.ICurrencyService>, SoapConsumerCurrencyConverter.ServiceReference1.ICurrencyService {
        
        public CurrencyServiceClient() {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double GetRate(SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode codeFrom, SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode codeTo) {
            return base.Channel.GetRate(codeFrom, codeTo);
        }
        
        public System.Threading.Tasks.Task<double> GetRateAsync(SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode codeFrom, SoapConsumerCurrencyConverter.ServiceReference1.CurrencyCode codeTo) {
            return base.Channel.GetRateAsync(codeFrom, codeTo);
        }
        
        public SoapConsumerCurrencyConverter.ServiceReference1.Currency[] GetAllCurrencyInfos() {
            return base.Channel.GetAllCurrencyInfos();
        }
        
        public System.Threading.Tasks.Task<SoapConsumerCurrencyConverter.ServiceReference1.Currency[]> GetAllCurrencyInfosAsync() {
            return base.Channel.GetAllCurrencyInfosAsync();
        }
    }
}
